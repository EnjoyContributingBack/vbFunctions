'''Comment lines generated by ChatGPT
'The provided code is for a VBA (Visual Basic for Applications) function in Microsoft Excel. 
'This function is designed to interpolate a value from a table of distances and corresponding magnitudes based on a given input distance
'This defines a public function named interpolateFromTable that takes three arguments:
    'dist is a range representing the distances in a table.
    'mag is a range representing the magnitudes associated with those distances.
    'inputdist is the input distance for which you want to interpolate a magnitude
'if the number of cells in the dist range is checked against the number of cells in the mag range. 
    'If they don't match, it displays a message box indicating the mismatch and sets the function result (interpolateFromTable) to 0
'if the number of cells in the dist range is less than 2. If so, it sets the function result to 0 and exits the function.
'It checks if the value in the current row of dist is greater than the inputdist value and if the loop counter r is greater than 1 (to ensure there's a previous value to interpolate from).
'If both conditions are met, it sets x1, y1, x2, and y2 to the values of the previous and current rows in dist and mag.
'It then calls a function named interpolated_Value which is defined below this block to perform the interpolation and 
'sets the function result (interpolateFromTable) to the interpolated value.
'Finally, it exits the function. If the loop doesn't find a suitable range in dist for interpolation, the function returns 0.
'''''''''''
'Overall, this function appears to be designed to interpolate a value between two points in a table of distances and corresponding magnitudes. 
'However, the exact interpolation logic relies on the interpolated_Value function, which is not included in the provided code.
''''
Public Function interpolateFromTable(dist As Range, mag As Range, inputdist As Range)
    Dim uFormula As String
    If (dist.Cells.Count <> mag.Cells.Count) Then
        MsgBox "The distance range and magnitude range does not match the length."
        interpolateFromTable = 0
        Exit Function
    End If
    'Debug.Print dist.Address, mag.Address, inputdist.Address
    Dim r As Long, x1 As Double, y1 As Double, x2 As Double, y2 As Double, n As Long
    n = dist.Cells.Count
    If (n < 2) Then
        interpolateFromTable = 0
        Exit Function
    End If
    For r = 1 To n
        If (dist.Cells(r, 1).Value > inputdist.Value And r > 1) Then
            x1 = dist.Cells(r - 1, 1).Value
            y1 = mag.Cells(r - 1, 1).Value
            x2 = dist.Cells(r, 1).Value
            y2 = mag.Cells(r, 1).Value
            interpolateFromTable = interpolated_Value(x1, y1, x2, y2, inputdist.Value)
            Exit Function
        End If
    Next r
    'uFormula = "=$" & get_ColumnNameFromNumber(c + 3) & rowStr & "*$" & get_ColumnNameFromNumber(c + 4) & rowStr
    'Cells(r, c + 5).Formula = Lookup 'cost formula
    interpolateFromTable = 0
End Function

'''
'In summary, this VBA function calculates the linear interpolation of a y-value for a given x-value between two points (x1, y1) and (x2, y2). 
'If the input x-values are equal, it returns 0 to handle the special case where the interpolation is not valid. 
'Otherwise, it applies the linear interpolation formula to calculate the interpolated value.
'''
Public Function interpolated_Value(x1 As Double, y1 As Double, x2 As Double, y2 As Double, x As Double)
    If (x2 = x1) Then
        interpolated_Value = 0
        Exit Function
    End If
    
    interpolated_Value = y1 - (y1 - y2) * (x - x1) / (x2 - x1)
End Function
